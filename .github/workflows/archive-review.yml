name: Archive Review

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to validate and merge'
        required: true
        type: string
      pr_number:
        description: 'PR number to merge'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  checks: read
  actions: write

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Validate files
        run: uv run --script src/processors/archive_validator.py archive

  add-reviewer:
    needs: validate
    if: needs.validate.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Add Reviewer and Label
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ github.event.inputs.pr_number }};
            
            // Add owner as reviewer
            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              reviewers: [context.repo.owner]
            });
            
            // Add label for archive review - create if it doesn't exist
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: ['ready-to-comment']
              });
            } catch (error) {
              if (error.status === 422) {
                // Label doesn't exist, create it
                console.log('Creating ready-to-comment label...');
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: 'ready-to-comment',
                  description: 'Archive is ready for review and commenting',
                  color: '0e8a16'
                });
                
                // Now add the label
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  labels: ['ready-to-comment']
                });
              } else {
                throw error;
              }
            }

  close-pr:
    needs: validate
    if: needs.validate.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Close PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ github.event.inputs.pr_number }};
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: 'Cannot merge PR: Validation failed. Closing PR.'
            });
            
            // Close the PR
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              state: 'closed'
            }); 